I enjoy building secure and correct systems.  I have built a number of static analysis and automated verification tools, with a recent focus on analysis of binaries.

# Repositories

## Data Structures

Data structures that may be generally useful

- {{ render_repo_hackage "haggle" "https://hackage.haskell.org/package/haggle" }}
- {{ render_repo_hackage "persistent-vector" "https://hackage.haskell.org/package/persistent-vector" }}
- {{ render_repo "robbed" }}

## Program Analysis

- {{ render_repo "build-bom" }}
- {{ render_repo "whole-program-llvm" }}; note that I consider this to be obsoleted by `build-bom`, which takes a more robust approach to the same problem
- {{ render_repo_hackage "itanium-abi" "https://hackage.haskell.org/package/itanium-abi" }}
- {{ render_repo "what4-serialize" }}

## Binary Analysis

- {{ render_repo "crepitans" }}
- {{ render_repo "dismantle" }}
- {{ render_repo "portable-executable" }}
- {{ render_repo "semmc" }}
- {{ render_repo "macaw" }}
- {{ render_repo "macaw-loader" }}
- {{ render_repo "renovate" }}
- {{ render_repo "language-sleigh" }}
- {{ render_repo "mctrace" }}

## Debugging Tools

- {{ render_repo "ddmin" }}
- {{ render_repo "surveyor" }}
- {{ render_repo "binary-walkr" }}

## Solvers

Note that these are interesting and informative, but definitely not efficient enough to use in production

- {{ render_repo "satisfaction" }}
- {{ render_repo "datalog" }}
- {{ render_repo_hackage "ifscs" "https://hackage.haskell.org/package/ifscs" }}
- {{ render_repo "satir" }}

## Emacs Packages

- {{ render_repo "haskell-pragma.el" }}
- {{ render_repo "haskell-interactive-import.el" }}

## Others

- {{ render_repo_hackage "taffybar" "https://hackage.haskell.org/package/taffybar" }}; now maintained by Ivan Malison
- {{ render_repo "travitch" }}, which generates this page
- {{ render_repo "blog" }}
- {{ render_repo "dotfiles" }}
